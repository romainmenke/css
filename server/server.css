@property id {
	syntax: "<string>";
	initial-value: uuid();
	inherits: true;
}

@property label {
	syntax: "<string>";
	initial-value: '';
	inherits: true;
}

@property content {
	syntax: "<string>";
	initial-value: '';
	inherits: true;
}

@property note {
	syntax: "<id>, <label>, <content>";
	initial-value: '';
	inherits: true;
}

@property error {
	syntax: "<string>";
	initial-value: 'internal server error';
	inherits: true;
}

@method (post) {
	#create {
		note: var(--label), var(--content);
	}

	#response {
		note: var(--id), var(--label), var(--content);
	}

	#error {
		error: var(--error);
	}
}

@method (delete) {
	#delete {
		note: var(--id);
	}

	#response {
		note: var(--id), var(--label), var(--content);
	}

	#error {
		error: var(--error);
	}
}

@method (get) {
	first {
		note: var(--id);
	}

	response {
		note: var(--id), var(--label), var(--content);
	}

	error {
		error: var(--error);
	}
}

@http (request[method="GET"]) and (request[path="/notes/"]) {
	response:zero {}

	response:one {
		note: var(--id), var(--label), var(--content);
	}

	response:many {
		notes: list(var(--id), var(--label), var(--content));
	}

	response:error {
		error: var(--error);
	}
}

@method (get) {
	#first {
		note: var(--id);
	}

	#response {
		note: var(--id), var(--label), var(--content);
	}

	#error {
		error: var(--error);
	}
}

@http (request[method="GET"]) and (request[path="/notes/"]) {
	#note[id]::find {
		id: where(attr(id));
	}

	.notes[label]::find {
		label: like(attr(label));
	}

	.notes[order]::find {
		order: attr(order);
	}

	#note[id]::response,
	.notes[label]::response {
		id: var(--id)
		label: var(--label)
		content: var(--content);
	}

	#note[id]:empty,
	.notes[label]:empty {
		/* Handle empty */
	}

	#note[id]:invalid,
	.notes[label]:invalid {
		error: var(--error);
	}
}
